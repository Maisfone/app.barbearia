version: "3.9"
services:
  db:
    image: postgres:16
    container_name: barbearia-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: "#abc123#"
      POSTGRES_DB: barbearia
      TZ: America/Sao_Paulo
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d barbearia"]
      interval: 5s
      timeout: 5s
      retries: 10

  adminer:
    image: adminer:4
    restart: unless-stopped
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy

  api:
    build: ./server
    container_name: barbearia-api
    environment:
      DATABASE_URL: postgres://postgres:%23abc123%23@db:5432/barbearia
      PORT: 4000
      # Ajuste com o domínio/porta do FRONT/ADMIN em produção
      ALLOWED_ORIGIN: http://localhost:5173,http://127.0.0.1:5173,http://localhost:5175
      ADMIN_TOKEN: admin123
      SHIFT_START_HOUR: 5
      TZ: America/Sao_Paulo
      # Web Push (opcional)
      VAPID_PUBLIC_KEY: ""
      VAPID_PRIVATE_KEY: ""
      VAPID_CONTACT: "mailto:admin@example.com"
    restart: unless-stopped
    ports:
      - "4000:4000"
    depends_on:
      db:
        condition: service_healthy

  web:
    build: ./barbearia
    container_name: barbearia-web
    environment:
      VITE_API_BASE: http://localhost:4000
      VITE_DEFAULT_SHOP: dersobarbearia
    restart: unless-stopped
    # Em produção com proxy, remova a porta e use apenas o proxy
    ports:
      - "5173:80"
    depends_on:
      api:
        condition: service_started

  admin:
    build: ./admin
    container_name: barbearia-admin
    environment:
      VITE_API_BASE: http://localhost:4000
    restart: unless-stopped
    ports:
      - "5175:80"
    depends_on:
      api:
        condition: service_started

volumes:
  db_data:
